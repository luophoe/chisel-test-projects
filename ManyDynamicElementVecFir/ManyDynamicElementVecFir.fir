circuit ManyDynamicElementVecFir :
  module ManyDynamicElementVecFir :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip in : UInt<8>, flip consts : UInt<8>[3], out : UInt<8>}

    wire _WIRE : UInt<8>[3] @[cmd5.sc 9:21]
    _WIRE[0] <= UInt<8>("h0") @[cmd5.sc 9:21]
    _WIRE[1] <= UInt<8>("h0") @[cmd5.sc 9:21]
    _WIRE[2] <= UInt<8>("h0") @[cmd5.sc 9:21]
    wire _WIRE_1 : UInt<8>[3] @[cmd5.sc 12:30]
    _WIRE_1[0] <= _WIRE[1] @[cmd5.sc 12:30]
    _WIRE_1[1] <= _WIRE[2] @[cmd5.sc 12:30]
    _WIRE_1[2] <= io.in @[cmd5.sc 12:30]
    reg REG : UInt, clock with :
      reset => (UInt<1>("h0"), REG) @[cmd5.sc 13:62]
    REG <= _WIRE_1[2] @[cmd5.sc 13:62]
    wire _WIRE_2 : UInt[3] @[cmd5.sc 13:24]
    _WIRE_2[0] <= _WIRE_1[1] @[cmd5.sc 13:24]
    _WIRE_2[1] <= _WIRE_1[2] @[cmd5.sc 13:24]
    _WIRE_2[2] <= REG @[cmd5.sc 13:24]
    reg REG_1 : UInt, clock with :
      reset => (UInt<1>("h0"), REG_1) @[cmd5.sc 13:62]
    REG_1 <= _WIRE_2[2] @[cmd5.sc 13:62]
    wire regs : UInt[3] @[cmd5.sc 13:24]
    regs[0] <= _WIRE_2[1] @[cmd5.sc 13:24]
    regs[1] <= _WIRE_2[2] @[cmd5.sc 13:24]
    regs[2] <= REG_1 @[cmd5.sc 13:24]
    wire _WIRE_3 : UInt<8>[3] @[cmd5.sc 16:21]
    _WIRE_3[0] <= UInt<8>("h0") @[cmd5.sc 16:21]
    _WIRE_3[1] <= UInt<8>("h0") @[cmd5.sc 16:21]
    _WIRE_3[2] <= UInt<8>("h0") @[cmd5.sc 16:21]
    node _T = mul(regs[0], io.consts[0]) @[cmd5.sc 18:61]
    wire _WIRE_4 : UInt[3] @[cmd5.sc 18:21]
    _WIRE_4[0] <= _WIRE_3[1] @[cmd5.sc 18:21]
    _WIRE_4[1] <= _WIRE_3[2] @[cmd5.sc 18:21]
    _WIRE_4[2] <= _T @[cmd5.sc 18:21]
    node _T_1 = mul(regs[1], io.consts[1]) @[cmd5.sc 18:61]
    wire _WIRE_5 : UInt[3] @[cmd5.sc 18:21]
    _WIRE_5[0] <= _WIRE_4[1] @[cmd5.sc 18:21]
    _WIRE_5[1] <= _WIRE_4[2] @[cmd5.sc 18:21]
    _WIRE_5[2] <= _T_1 @[cmd5.sc 18:21]
    node _T_2 = mul(regs[2], io.consts[2]) @[cmd5.sc 18:61]
    wire muls : UInt[3] @[cmd5.sc 18:21]
    muls[0] <= _WIRE_5[1] @[cmd5.sc 18:21]
    muls[1] <= _WIRE_5[2] @[cmd5.sc 18:21]
    muls[2] <= _T_2 @[cmd5.sc 18:21]
    wire _WIRE_6 : UInt<8>[3] @[cmd5.sc 21:21]
    _WIRE_6[0] <= UInt<8>("h0") @[cmd5.sc 21:21]
    _WIRE_6[1] <= UInt<8>("h0") @[cmd5.sc 21:21]
    _WIRE_6[2] <= UInt<8>("h0") @[cmd5.sc 21:21]
    wire _WIRE_7 : UInt[3] @[cmd5.sc 23:32]
    _WIRE_7[0] <= _WIRE_6[1] @[cmd5.sc 23:32]
    _WIRE_7[1] <= _WIRE_6[2] @[cmd5.sc 23:32]
    _WIRE_7[2] <= muls[0] @[cmd5.sc 23:32]
    node _T_3 = add(muls[1], _WIRE_7[2]) @[cmd5.sc 24:67]
    node _T_4 = tail(_T_3, 1) @[cmd5.sc 24:67]
    wire _WIRE_8 : UInt[3] @[cmd5.sc 24:26]
    _WIRE_8[0] <= _WIRE_7[1] @[cmd5.sc 24:26]
    _WIRE_8[1] <= _WIRE_7[2] @[cmd5.sc 24:26]
    _WIRE_8[2] <= _T_4 @[cmd5.sc 24:26]
    node _T_5 = add(muls[2], _WIRE_8[2]) @[cmd5.sc 24:67]
    node _T_6 = tail(_T_5, 1) @[cmd5.sc 24:67]
    wire scan : UInt[3] @[cmd5.sc 24:26]
    scan[0] <= _WIRE_8[1] @[cmd5.sc 24:26]
    scan[1] <= _WIRE_8[2] @[cmd5.sc 24:26]
    scan[2] <= _T_6 @[cmd5.sc 24:26]
    io.out <= scan[2] @[cmd5.sc 27:10]

